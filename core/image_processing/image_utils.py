# -*- coding: utf-8 -*-

"""
/***************************************************************************
 DeepLearningTools
                                 A QGIS plugin
 QGIS plugin to aid training Deep Learning Models
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2020-03-12
        copyright            : (C) 2020 by Philipe Borba
        email                : philipeborba@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from osgeo import gdal, osr 

class ImageUtils:

    @staticmethod
    def set_output_srs_form_input(input_ds, output_ds):
        """
        Sets output srs the same as input
        """
        raster_srs = osr.SpatialReference()
        raster_srs.ImportFromWkt(input_ds.GetProjectionRef())
        output_ds.SetProjection(raster_srs.ExportToWkt())

    @staticmethod
    def get_output_raster_from_input(input_path, output_path):
        """
        Gets the output raster equals to the input, but only with
        nodata.
        """
        input_ds = gdal.Open(input_path)
        output_ds = gdal.GetDriverByName('GTiff').Create(
            output_path,
            input_ds.RasterXSize,
            input_ds.RasterYSize,
            1,
            gdal.GDT_Byte
        )
        set_output_srs_form_input(input_ds, output_ds)
        return output_ds

    @staticmethod
    def get_band(raster_ds, band_number, nodata_value=0):
        band = raster_ds.GetRasterBand(band_number)
        band.Fill(nodata_value)
        band.SetNoDataValue(nodata_value)
        return band

    @staticmethod
    def create_image_label(input_path, output_path, input_layer,\
        burn_value=1, nodata_value=0):
        """
        Creates image label with the same size as input_path
        """
        output_ds = get_output_raster_from_input(
            input_path,
            output_path
        )
        # band = get_band(input_ds, 0, nodata_value=nodata_value)
        # xmin, ymin, xmax, ymax = data.GetGeoTransform()
        
        # # burn
        # burnField = "burn"
        # idField = ogr.FieldDefn(burnField, ogr.OFTInteger)
        # outLayer.CreateField(idField)
        # featureDefn = outLayer.GetLayerDefn()
        # for geomShape in gdf['geometry'].values:
        #     outFeature = ogr.Feature(featureDefn)
        #     outFeature.SetGeometry(ogr.CreateGeometryFromWkt(
        #                         geomShape.wkt))
        #     outFeature.SetField(burnField, burnValue)
        #     outLayer.CreateFeature(outFeature)
        #     outFeature = 0
        
        gdal.RasterizeLayer(output_ds, [1], input_layer, 
                        burn_values=[burn_value])